{"version":3,"sources":["main.js"],"names":[],"mappingsfile":"main.js","sourcesContent":["'use strict';\n\n// CONSTANTES\nconst favorites = document.querySelector('.js-favorites');\nconst btn = document.querySelector('.js-btn');\nconst seriesContainer = document.querySelector('.js-container');\nconst msgError = document.querySelector('.js-msg-error');\nconst inputSearch = document.querySelector('.js-input-search');\n\n// VARIABLES\nlet series = [];\nlet fav = [];\n\nfav = JSON.parse(localStorage.getItem('fav')) || []; //coge datos o arrays, porque daba fallo. fav coge directamente el array de la constante let fav porque ya se generan las series ah√≠.\n\n// FUNCIONES\n\nfunction searchInfo(event) {\n  if (event) {\n    event.preventDefault();\n  }\n  const inputText = inputSearch.value.trim(); //elimina espacios en blanco en los extremos de los string\n  if (inputText === '') {\n    msgError.innerHTML = 'Esa serie no la he visto üëÄ';\n    return;\n  }\n\n  fetch(`https://api.tvmaze.com/search/shows?q=${inputText}`)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error('No consigo encontrarlo...'); // Le dice al ordena que algo est√° roto y esto lo para.\n      }\n      return response.json();\n    })\n    .then((dataApi) => {\n      series = dataApi;\n      msgError.innerHTML = '';\n      renderSerieList(dataApi);\n    })\n    .catch((error) => {\n      msgError.innerHTML = error.message;\n    });\n}\n\nfunction renderSerie(oneSerie, flag) {\n  const imageSrc = oneSerie.show.image\n    ? oneSerie.show.image.original\n    : 'https://via.placeholder.com/210x295/ffffff/666666/?text=TV';\n\n  let html = `\n    <div class=\"card__serie-container js-ulElements\" id=\"${oneSerie.show.id}\">\n      <h2 class=\"serie__title\">${oneSerie.show.name}</h2>\n      <h3 class=\"serie__language\">${oneSerie.show.language}</h3>\n      <ul>\n        <li class=\"js-liElements\">\n          <img src=\"${imageSrc}\" alt=\"${oneSerie.show.name}\" title=\"${oneSerie.show.name}\" />\n        </li>\n      </ul>`;\n      if (oneSerie.show.language === 'Spanish'){\n        html += `<div>Serie recomendada</div>`;\n      }\n  if (flag === 'flagFav') {\n    html += `<span class=\"remove-x\" data-id=\"${oneSerie.show.id}\">X</span>`;\n  }\n  html += `</div>`;\n  return html;\n}\n\nfunction renderSerieList(listSeries) {\n  const fragment = document.createDocumentFragment(); // Es como un contenedor en blanco donde poner las series antes de ponerlas en el contenedor definitivo.\n  for (const oneSerie of listSeries) {\n    const serieElement = document.createElement('div');\n    serieElement.innerHTML = renderSerie(oneSerie);\n    fragment.appendChild(serieElement);\n  }\n  seriesContainer.innerHTML = '';\n  seriesContainer.appendChild(fragment);\n  addEventsToSerie();\n}\n\nfunction renderSeriesFav(favSeries) {\n  favorites.innerHTML = '';\n  for (const oneSerie of favSeries) {\n    favorites.innerHTML += renderSerie(oneSerie, 'flagFav');\n  }\n}\n\n// A√ëADIR SERIES FAVORITAS\nfunction handleClickId(event) {\n  const idSerieClick = parseInt(event.currentTarget.id);\n\n  const foundSerie = series.find(\n    (oneSerie) => oneSerie.show.id === idSerieClick\n  );\n\n  const serieFavIndex = fav.findIndex(\n    (oneSerie) => oneSerie.show.id === idSerieClick\n  );\n\n  if (serieFavIndex === -1) {\n    fav.push(foundSerie);\n    event.currentTarget.classList.add('add__to-fav');\n  } else {\n    fav.splice(serieFavIndex, 1); //elimina, agrega o sustituye en el array\n    event.currentTarget.classList.remove('add__to-fav');\n  }\n\n  renderSeriesFav(fav, 'flagFav');\n  addEventsToXFav();\n  localStorage.setItem('fav', JSON.stringify(fav));\n}\n\n// EVENTOS\nfunction addEventsToSerie() {\n  const allSeries = document.querySelectorAll('.js-ulElements');\n  for (const oneSerie of allSeries) {\n    oneSerie.addEventListener('click', handleClickId);\n   \n  }\n}\n\n//Para escuchar sobre las X\nfunction addEventsToXFav() {\n  const allSeries = document.querySelectorAll('.remove-x');\n  for (const removeX of allSeries) {\n    removeX.addEventListener('click', handleRemoveFav);\n  }\n}\n\nbtn.addEventListener('click', searchInfo);\ninputSearch.addEventListener('input', () => {\n  msgError.innerHTML = '';\n});\ninputSearch.addEventListener('keydown', (event) => {\n  if (event.key === 'Enter') {\n    searchInfo(event);\n  }\n});\n\n//Para quitar las series de FAV\nfunction handleRemoveFav(event) {\n  event.preventDefault();\n  const idToX = parseInt(event.currentTarget.getAttribute(`data-id`));\n  const serieIdex = fav.findIndex((oneSerie) => oneSerie.show.id === idToX);\n  fav.splice(serieIdex, 1);\n  renderSeriesFav(fav);\n  addEventsToXFav();\n  localStorage.setItem('fav', JSON.stringify(fav));\n}\n\nconst btnLog = document.querySelector('.js-LOG');\n\nbtnLog.addEventListener('click', (event) => {\n  event.preventDefault();\n  const favoritos = fav.length;\n  console.log(`Tu n√∫mero de favitos es ${favoritos}`);\n})\n\n// Cargar las series favoritas almacenadas en localStorage al iniciar la p√°gina\nrenderSeriesFav(fav);\naddEventsToXFav();\n"]}